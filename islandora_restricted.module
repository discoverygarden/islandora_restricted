<?php
/**
 * @file
 * Holds mainly hook implementations for the islandora_restricted module.
 */

define('ISLANDORA_RESTRICTED_APPLY_RESTRICTIONS', 'apply islandora restrictions');
define('ISLANDORA_RESTRICTED_CAN_SEE_RESTRICTED_RELATIONSHIP', 'canSeeRestricted');
define('ISLANDORA_RESTRICTED_CAN_SEE_HIDDEN_RELATIONSHIP', 'canSeeHidden');
define('ISLANDORA_RESTRICTED_OBJECT_STATE_RELATIONSHIP', 'restrictedState');

/**
 * Implements hook_menu().
 */
function islandora_restricted_menu() {
  $items = array();
  $items['admin/islandora/islandora-restricted'] = array(
    'title' => 'Islandora Restricted',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_restricted_admin_form'),
    'access arguments' => array('administer islandora_restricted'),
    'file' => 'includes/admin.form.inc',
  );
  $items['islandora/object/%islandora_object/manage/restricted'] = array(
    'title' => 'Simple Restrictions',
    'type' => MENU_LOCAL_TASK,
    'weight' => 0,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_restricted_manage_form', 2),
    'access callback' => 'islandora_restricted_access',
    'access arguments' => array(2),
    'file' => 'includes/restrict.form.inc',
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function islandora_restricted_permission() {
  return array(
    'administer islandora_restricted' => array(
      'title' => t('Administer the Islandora Restricted module'),
    ),
    ISLANDORA_RESTRICTED_APPLY_RESTRICTIONS => array(
      'title' => t('Apply simple security restrictions to Islandora objects'),
    ),
  );
}

/**
 * Access callback to display the Simple Restrictions tab.
 *
 * @param AbstractObject $object
 *   An AbstractObject representing an object within Fedora.
 *
 * @return bool
 *   TRUE if the user has access, FALSE otherwise.
 */
function islandora_restricted_access(AbstractObject $object) {
  return islandora_object_access(ISLANDORA_RESTRICTED_APPLY_RESTRICTIONS, $object);
}

/**
 * Implements hook_islandora_object_access().
 */
function islandora_restricted_islandora_object_access($op, $object, $user) {
  // @TODO: This needs to be flushed out more but I think it's part of UM-28.
  // For now let's just return a NULL.
  return NULL;
}

/**
 * Implements hook_islandora_ingest_steps().
 */
function islandora_restricted_islandora_ingest_steps(array $form_state) {
  return array(
    'islandora_restricted_ingest' => array(
      'type' => 'form',
      'weight' => 47,
      'form_id' => 'islandora_restricted_ingest_form',
      'module' => 'islandora_restricted',
      'file' => 'includes/restrict.form.inc',
    ),
  );
}

/**
 * Implements hook_islandora_basic_collection_get_query_statements().
 */
function islandora_restricted_islandora_basic_collection_get_query_statements($type = 'view') {
  $islandora_prefix = ISLANDORA_RELS_EXT_URI;
  $state_rels = ISLANDORA_RESTRICTED_OBJECT_STATE_RELATIONSHIP;
  $hidden_rels = ISLANDORA_RESTRICTED_CAN_SEE_HIDDEN_RELATIONSHIP;
  // Only filter if the user doesn't have the permission.
  if (!user_access(ISLANDORA_RESTRICTED_APPLY_RESTRICTIONS)) {
    // Get the state so we can figure out what restrictions we need to apply.
    return <<<EOQ
    OPTIONAL
    {
        ?object <$islandora_prefix$state_rels> "hidden" ;
                <$islandora_prefix$hidden_rels> ?entity_uri
    }
EOQ;
  }
}

/**
 * Implements hook_islandora_basic_collection_get_query_filters().
 */
function islandora_restricted_islandora_basic_collection_get_query_filters($type) {
  module_load_include('inc', 'islandora_restricted', 'includes/utilities');
  global $user;
  $user_uri = islandora_restricted_create_uri_link($user->uid, 'user');

  $role_matches = array();
  foreach ($user->roles as $rid => $role_name) {
    $role_uri = islandora_restricted_create_uri_link($rid, 'role');
    $role_matches[] = "?entity_uri=<{$role_uri}>";
  }
  $role_matcher = implode(' || ', $role_matches);
  // Only filter if the user doesn't have the permission.
  if (!user_access(ISLANDORA_RESTRICTED_APPLY_RESTRICTIONS)) {
    return "(!bound(?entity_uri) || (?entity_uri=<{$user_uri}> || $role_matcher))";
  }
}

/**
 * Implements hook_preprocess_islandora_basic_collection_grid().
 */
function islandora_restricted_preprocess_islandora_basic_collection_grid(&$variables) {
  module_load_include('inc', 'islandora_restricted', 'includes/utilities');
  global $user;
  foreach ($variables['associated_objects_array'] as $pid => $object_array) {
    if (!islandora_restricted_user_has_access($object_array['object'], $user)) {
      $restricted_image = theme('image', array(
        'path' => drupal_get_path('module', 'islandora_restricted') . '/images/access_denied.png',
      ));
      $restricted_image_link = l($restricted_image, $object_array['path'], array(
        'html' => TRUE,
        'attributes' => array('title' => $object_array['title']),
      ));
      $variables['associated_objects_array'][$pid]['thumbnail'] = $restricted_image;
      $variables['associated_objects_array'][$pid]['thumb_link'] = $restricted_image_link;
      $variables['associated_objects_array'][$pid]['dc_array'] = array();
    }
  }
}

/**
 * Implements hook_preprocess_islandora_basic_collection().
 */
function islandora_restricted_preprocess_islandora_basic_collection(&$variables) {
  islandora_restricted_preprocess_islandora_basic_collection_grid($variables);
}
